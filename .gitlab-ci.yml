services:
  - docker:dind

stages:
  - build
  - checks

build:
  image: golang:latest
  stage: build
  tags:
    - tokend
  script:
    - env
    - go build main.go

check_ahead:
  image: docker:latest
  stage: checks
  tags:
    - tokend
  script:
    - apk add git
    - DIFF=$(git log --oneline $CI_MERGE_REQUEST_TARGET_BRANCH_NAME..HEAD)
    - '[ -z "$DIFF" ] && docker run --rm -e GITHUB_TOKEN=$GITHUB_TOKEN cloudposse/github-status-updater -action update_state -context CI/target-merged -description "Target branch should be merged" -owner awsum -repo movealong -ref $CI_COMMIT_SHA -state success || docker run --rm -e GITHUB_TOKEN=$GITHUB_TOKEN cloudposse/github-status-updater -action update_state -context CI/target-merged -description "Target branch should be merged" -owner awsum -repo movealong -ref $CI_COMMIT_SHA -state failure'

unit_test:
  image: golang:latest
  stage: checks
  tags:
    - tokend
  coverage: '/total:.+[0-9\.]+%$/'
  script:
    - go get github.com/cloudposse/github-status-updater
    - github-status-updater -action update_state -context CI/coverage-report -description "Coverage report aggregation is in progress" -owner awsum -repo movealong -ref $CI_COMMIT_SHA -state pending
    - go test -v -covermode=count -coverprofile=./coverage.out ./...
    - COVERAGE_NOW=$(go tool cover -func=./coverage.out | tail -n 1 | awk '{print substr($3, 1, length($3)-1)}')
    - git checkout -f master
    - go test -v -covermode=count -coverprofile=./coverage.out ./...
    - COVERAGE_MST=$(go tool cover -func=./coverage.out | tail -n 1 | awk '{print substr($3, 1, length($3)-1)}')
    - DIFF=$(awk '{print $1-$2}' <<< "$COVERAGE_NOW $COVERAGE_MST")
    - github-status-updater -action update_state -context CI/coverage-report -description "Coverage score is change is $DIFF" -owner awsum -repo movealong -ref $CI_COMMIT_SHA -state success

#build:
#  image: docker:latest
#  stage: build
#  tags:
#    - tokend
#  script:
#    - echo "bulding"
#    - sleep 5
#    - echo "done"
#
#unit_tests:
#  image: golang:latest
#  stage: test
#  tags:
#    - tokend
#  # total:                                                  (statements)    44.4%
#  script:
#    - go test -v -covermode=count -coverprofile=./coverage.out ./...
#    - go tool cover -func=./coverage.out

#integration_tests:
#  image: docker:latest
#  stage: test
#  tags:
#    - tokend
#  script:
#    - echo "running unit tests"
#    - sleep 40
#    - echo "done"